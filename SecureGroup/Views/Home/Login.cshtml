@model SecureGroup.ViewModel.LoginViewModel
@{
    Layout = null;
}

<!DOCTYPE html>

<html>
<head>
    <meta name="viewport" content="width=device-width" />
    <title>Login</title>
    <link rel="stylesheet" href="~/lib/bootstrap/dist/css/bootstrap.min.css" />
    <link rel="stylesheet" href="~/css/site.css" />
    <!-- font awesome css -->
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.7.0/css/font-awesome.min.css">
    <link href="https://fonts.googleapis.com/css2?family=Inter:wght@100;200;300;400;500;600;700;800;900&display=swap" rel="stylesheet">


    <link media="screen" rel="stylesheet" href="https://cdn.jsdelivr.net/sweetalert2/6.3.8/sweetalert2.min.css" />
    <link media="screen" rel="stylesheet" href='https://cdn.jsdelivr.net/sweetalert2/6.3.8/sweetalert2.css' />
    <script type="text/javascript" src="https://cdnjs.cloudflare.com/ajax/libs/bluebird/3.3.5/bluebird.min.js"></script>
    <script type="text/javascript" src="https://ajax.googleapis.com/ajax/libs/jquery/1.9.1/jquery.min.js"></script>
    <script type="text/javascript" src="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/js/bootstrap.min.js"></script>
    <link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css" />
    <script type="text/javascript" src="https://cdn.jsdelivr.net/sweetalert2/6.3.8/sweetalert2.min.js"></script>
</head>
<body>

    <div class="welcome-pages">

        <div class="welcome-wrapper">

           @* @if (ViewBag.errormessage != null)
            {
                <p class="alert alert-danger" id="successMessage">@ViewBag.errormessage</p>
                <script type="text/javascript">
                    window.onload = function () {
                        swal("Good job!", '@ViewBag.errormessage, "error");
                    };
                </script>
            }*@

            @if (TempData["errormessage"] != null)
            {
                <script type="text/javascript">
                    window.onload = function () {
                        swal("Error!", '@TempData["errormessage"]', "error");
                    };
                </script>
            }          



            @if (TempData["successmessage"] != null)
            {
                <script type="text/javascript">
                    window.onload = function () {
                        swal("success!", '@TempData["successmessage"]', "success");
                    };
                </script>
            }

            <div class="welcome-header">
                <img src="~/images/logo.svg" class="login-logo" alt="">
            </div>

            
            <form asp-action="Login">
                <div asp-validation-summary="ModelOnly" class="text-danger"></div>
                <div class="logas">
                    <h2>Login as </h2>
                <select asp-for="RoleId" id="ddlRoleId"
                        class="form-control"
                        asp-items="@(new SelectList(Model.RoleList,"Value", "Text"))">
                </select>
                <span asp-validation-for="RoleId" class="text-danger"></span>
                </div>
                <div class="mb-3 custom-form-control">                  
                    
                    <input asp-for="Username" class="form-control" placeholder="Phone No or Email Address" />
                    <span asp-validation-for="Username" class="text-danger"></span>

                </div>
                <div class="mb-3 custom-form-control" id="show_hide_password">
                    <input asp-for="Password" class="form-control" placeholder="Password" type="password" />
                    <span asp-validation-for="Username" class="text-danger"></span>                   
                    <a href="javascript:void(0)" class="toggle-pass"><i class="fa fa-eye-slash" aria-hidden="true"></i></a>
                </div>

                <a class="f-pass-btn" asp-action="ForgotPassword" asp-controller="Home">Forgot Password?</a>
                <img src="~/images/robot.png" class="rbt-png">
                
               @* <a asp-controller="Home" asp-action="Dashboard" class="login-process-btn" style="display:flex; align-items:center; justify-content:center; text-decoration:none; margin:50px auto 0 auto;">
                    Submit                   
                </a>*@
                
                <input class="form-control" type="hidden" id="lat" />
                <input class="form-control" type="hidden" id="lng" />
                

                <input type="submit" value="Login" class="login-process-btn" id="btnLogin" />
            </form>

        </div>

    </div>

    @section Scripts {
        @{
            await Html.RenderPartialAsync("_ValidationScriptsPartial");
        }
    }

    <script src="~/lib/jquery/dist/jquery.min.js"></script>
    <script src="~/lib/bootstrap/dist/js/bootstrap.bundle.min.js"></script>


          @* <script>
        $("#slide-toggle-btn").click(function () {
            alert("hi i am working");
            $("#side-bar-slide-toggle").toggleClass("slide-sidebar-new");
        });
    </script>*@
    <script src="~/js/site.js" asp-append-version="true"></script>

    <script>

        $(document).ready(function () {

            // Check if geolocation is supported by the browser
            if ("geolocation" in navigator) {
                // Prompt user for permission to access their location
                navigator.geolocation.getCurrentPosition(
                    // Success callback function
                    (position) => {
                        // Get the user's latitude and longitude coordinates
                        const lat = position.coords.latitude;
                        const lng = position.coords.longitude;

                        // Do something with the location data, e.g. display on a map
                        console.log(`Latitude: ${lat}, longitude: ${lng}`);
                        document.getElementById("lat").value = lat;
                        document.getElementById("lng").value = lng;

                        //var vasteras = { lat: 22.579169, lng: 88.387761 };
                        //var stockholm = { lat: lat, lng: lng };                    



                        //var n = arePointsNear(vasteras, stockholm, 1);

                        //console.log('Your Status - '+n);
                        //alert('Your Status - ' + n);
                    },
                    // Error callback function
                    (error) => {
                        // Handle errors, e.g. user denied location sharing permissions
                        console.error("Error getting user location:", error);
                    }
                );
            } else {
                // Geolocation is not supported by the browser
                console.error("Geolocation is not supported by this browser.");
            }

            function arePointsNear(checkPoint, centerPoint, km) {
                var ky = 40000 / 360;
                var kx = Math.cos(Math.PI * centerPoint.lat / 180.0) * ky;
                var dx = Math.abs(centerPoint.lng - checkPoint.lng) * kx;
                var dy = Math.abs(centerPoint.lat - checkPoint.lat) * ky;
                var gg = Math.sqrt(dx * dx + dy * dy);
                
                //Swal.fire('Any fool can use a computer');
               // sweetAlert("Oops...", "Something went wrong!", "error");
                //alert(gg);
                return Math.sqrt(dx * dx + dy * dy) <= km;
            }

            function getAddress(latitude, longitude) {
                return new Promise(function (resolve, reject) {
                    var request = new XMLHttpRequest();

                    var method = 'GET';
                    var url = 'http://maps.googleapis.com/maps/api/geocode/json?latlng=' + latitude + ',' + longitude + '&sensor=true';
                    var async = true;

                    request.open(method, url, async);
                    request.onreadystatechange = function () {
                        if (request.readyState == 4) {
                            if (request.status == 200) {
                                var data = JSON.parse(request.responseText);
                                var address = data.results[0];
                                resolve(address);
                            }
                            else {
                                reject(request.status);
                            }
                        }
                    };
                    request.send();
                });
            };

            $("#show_hide_password a").on('click', function (event) {

                event.preventDefault();

                if ($('#show_hide_password input').attr("type") == "text") {

                    $('#show_hide_password input').attr('type', 'password');

                    $('#show_hide_password i').addClass("fa-eye-slash");

                    $('#show_hide_password i').removeClass("fa-eye");

                } else if ($('#show_hide_password input').attr("type") == "password") {

                    $('#show_hide_password input').attr('type', 'text');

                    $('#show_hide_password i').removeClass("fa-eye-slash");

                    $('#show_hide_password i').addClass("fa-eye");

                }

            });

            
            //Due to SSL log
            $("#btnLogin_1").on('click', function (event) {

                var RoleId = document.getElementById("ddlRoleId").value;
                if (RoleId!=1)
                {
                    var lat = document.getElementById("lat").value;
                    var lng = document.getElementById("lng").value;
                    //var vasteras = { lat: 22.579169, lng: 88.387761 };22.613797880751562, 88.41316028586681
                    //var vasteras = { lat: 22.582369, lng: 88.477582 };
                    var vasteras = { lat: 22.613797880751562, lng: 88.41316028586681 };
                    var stockholm = { lat: lat, lng: lng };
                    if (lat != "" && lng != "") {
                        //alert(lat+'-not null');


                        var n = arePointsNear(vasteras, stockholm, 10);
                        // getAddress(lat, lng).then(console.log).catch(console.error);
                        //return false;
                        if (n == false) {
                            sweetAlert("Oops...", "Your current location out of coverage area!", "error");
                            return false;
                        } else {
                            //alert('Your Status - ' + n);
                            return true;
                        }

                    } else {
                        //alert(lat + '-is null');
                        sweetAlert("Oops...", "Please allow your location!", "error");
                        return false;

                    }
                }
               
               
            });

        });



    </script>

 @*   <script type="text/javascript" src="https://maps.googleapis.com/maps/api/js?sensor=false"></script>
    <script type="text/javascript">
        var long = 0;
        var lat = 0;
        window.onload = function () {
            var mapOptions = {
                center: new google.maps.LatLng(20.9600, 80.0000),
                zoom: 14,
                mapTypeId: google.maps.MapTypeId.ROADMAP
            };
            var infoWindow = new google.maps.InfoWindow();
            var latlngbounds = new google.maps.LatLngBounds();
            var map = new google.maps.Map(document.getElementById("dvMap"), mapOptions);
            google.maps.event.addListener(map, 'click', function (e) {
                long = e.latLng.lng();
                lat = e.latLng.lat();
                document.getElementById("lat").value = lat;
                document.getElementById("lng").value = long;
                alert("Latitude: " + lat + "\r\nLongitude: " + long);
            });
        }
    </script>*@

   

</body>
</html>
