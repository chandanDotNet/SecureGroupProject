@model IEnumerable<SecureGroup.ViewModel.WHStockProductDetailsViewModel>

@{
    ViewData["Title"] = "WarehouseStockDetails";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/3.4.1/css/bootstrap.min.css">
<link rel="stylesheet" href="https://cdn.datatables.net/buttons/2.4.1/css/buttons.dataTables.min.css">
<script src="https://cdn.datatables.net/1.13.5/js/jquery.dataTables.min.js"></script>
<script src="https://cdn.datatables.net/1.13.5/js/dataTables.bootstrap5.min.js"></script>
<script src="https://cdn.datatables.net/buttons/2.4.1/js/buttons.print.min.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/pdfmake/0.1.53/pdfmake.min.js"></script>

<script src="https://cdn.datatables.net/buttons/2.3.6/js/dataTables.buttons.min.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/jszip/3.1.3/jszip.min.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/pdfmake/0.1.53/pdfmake.min.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/pdfmake/0.1.53/vfs_fonts.js"></script>
<script src="https://cdn.datatables.net/buttons/2.3.6/js/buttons.html5.min.js"></script>

<label>WareHouse :- </label>  <label>@TempData["WareHouseName"]</label>

<div class="warehouse-data table-responsive">
    <table id="example">
    <thead>
        <tr>
           
          @*  <th>
                    WareHouse Name
            </th>*@
          
            <th>
                    Product Name
            </th>
           
            <th>
                    SubProduct Name
            </th>
            <th>
                    Purchase Quantity
            </th>
            <th>
                    Stock In
            </th>
            <th>
                    Stock Out
            </th>
            <th>
                    Closing Quantity
            </th>
           @* <th>
                @Html.DisplayNameFor(model => model.TransferType)
            </th>*@
           
        </tr>
    </thead>
    <tbody>
@foreach (var item in Model) {
        <tr>
           
          @*  <td>
                @Html.DisplayFor(modelItem => item.WareHouseName)

            </td>*@
           
            <td>
                @Html.DisplayFor(modelItem => item.ProductName)
            </td>
           
            <td>
                @Html.DisplayFor(modelItem => item.SubProductName)
            </td>
            <td>
               @* @Html.DisplayFor(modelItem => item.ProductAddQty)*@
                        @Html.ActionLink(""+item.ProductAddQty, "WHProductPurchaseDetails", new { WareHouseId=item.WareHouseId,ProductId=item.ProductId,SubProductId=item.SubProductId},new { @class = "view-td-details fa fa-eye"})
            </td>
            <td>
                @*@Html.DisplayFor(modelItem => item.StockIn)*@
                        @Html.ActionLink(""+item.StockIn, "WHProductStockInDetails", new { WareHouseId=item.WareHouseId,ProductId=item.ProductId,SubProductId=item.SubProductId},new { @class = "view-td-details fa fa-eye"})
            </td>
            <td>
                @*@Html.DisplayFor(modelItem => item.StockOut)*@
                        @Html.ActionLink(""+item.StockOut, "WHProductStockOutDetails", new { WareHouseId=item.WareHouseId,ProductId=item.ProductId,SubProductId=item.SubProductId},new { @class = "view-td-details fa fa-eye"})
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.TotalQty)
            </td>
           @* <td>
                @Html.DisplayFor(modelItem => item.TransferType)
            </td>*@
           
        </tr>
}
    </tbody>
</table>

</div>

<script>
    $('#example').DataTable({
        dom: 'Bfrtip',
        buttons: [
            'copyHtml5',
            'excelHtml5',
            'csvHtml5',
            'pdfHtml5'
        ]
    });
</script>